SELECT * FROM CAT_TIPO_IDENTIFICACION
SELECT * FROM CAT_TIPO_NOMINA

--CREACION DE TABLA
IF OBJECT_ID('TEMPDB..#PERSONA') IS NOT NULL
BEGIN
	DROP TABLE CAT_DATOS_BASICOS
END
CREATE TABLE CAT_DATOS_BASICOS(
COD_CLIENTE INT,
PRIMER_NOMBRE VARCHAR(50),
PRIMER_APELLIDO VARCHAR(50),
FECHA_NACIMIENTO DATE,
GENERO VARCHAR(50),
DIRECCION VARCHAR(50),
NIT INT,
DPI INT,
EMAIL VARCHAR(50),
TELEFONO INT,
SALARIO INT,
SALARIO_LIQUIDO INT,
CREDITO_AUTORIZADO VARCHAR(50),
ESTADO VARCHAR(50) 
)

--INSERTAR DATOS
INSERT INTO CAT_DATOS_BASICOS(COD_CLIENTE, PRIMER_NOMBRE, PRIMER_APELLIDO, FECHA_NACIMIENTO, GENERO, ESTADO)
SELECT COD_PERSONA, PRIMER_NOMBRE, PRIMER_APELLIDO, FEC_NACIMIENTO, GENERO, ESTADO
FROM PERSONA

--UPDATE A ACTIVOS, INACTIVOS, FEMENINOS, MASCULINOS
UPDATE CAT_DATOS_BASICOS
SET ESTADO = 'ACTIVO'
WHERE ESTADO = '1'

UPDATE CAT_DATOS_BASICOS
SET GENERO = 'FEMENINO'
WHERE GENERO = 'F'

--CREACION E INSERCCION DE DIRECCIONES
IF OBJECT_ID ('TEMPDB..#DIRECCION') IS NOT NULL 
BEGIN
	DROP TABLE #DIRECCION
END
SELECT * 
INTO #DIRECCION
FROM (
	SELECT  COD_PERSONA, FEC_ACTUALIZACION, DIRECCION, COD_DIRECCION,
ROW_NUMBER() OVER (PARTITION BY COD_PERSONA ORDER BY FEC_ACTUALIZACION DESC, COD_DIRECCION DESC ) AS RN
FROM DIRECCION
WHERE ESTADO = 1 
) AS D
WHERE RN = 1
 
SELECT * FROM IDENTIFICACION
ORDER BY COD_PERSONA

--UPDATE DIRECCION
UPDATE CAT_DATOS_BASICOS
SET DIRECCION = D.DIRECCION
FROM CAT_DATOS_BASICOS CD
JOIN #DIRECCION D ON CD.COD_CLIENTE = D.COD_PERSONA
WHERE CD.DIRECCION IS NULL

--SELECCION DE NIT
IF OBJECT_ID ('TEMPDB..#NIT') IS NOT NULL 
BEGIN
	DROP TABLE #NIT
END
SELECT * 
INTO #NIT
FROM (
	SELECT *,
ROW_NUMBER() OVER (PARTITION BY COD_PERSONA ORDER BY FEC_ACTUALIZACION DESC, COD_ID DESC ) AS RN
FROM IDENTIFICACION
WHERE ESTADO = 1 AND TIPO = 2
) AS D
WHERE RN = 1

SELECT * FROM #NIT

--UPDATE NIT
UPDATE CAT_DATOS_BASICOS
SET NIT = N.NUMERO
FROM CAT_DATOS_BASICOS CD
JOIN #NIT N ON CD.COD_CLIENTE = N.COD_PERSONA
WHERE CD.NIT IS NULL
SELECT * FROM #NIT
ALTER TABLE CAT_DATOS_BASICOS
ALTER COLUMN DPI VARCHAR(50)

SELECT * FROM IDENTIFICACION
SELECT * FROM CAT_DATOS_BASICOS

--SELECCION DEL DPI
IF OBJECT_ID('TEMPDB..#DIRECCION') IS NOT NULL
	DROP TABLE #DPI
SELECT *
INTO #DPI
FROM (
	SELECT *, ROW_NUMBER() OVER (PARTITION BY COD_PERSONA ORDER BY FEC_ACTUALIZACION DESC, COD_ID DESC) RN
	FROM IDENTIFICACION
	WHERE ESTADO = 1 AND TIPO = 1
) A 
WHERE RN = 1

SELECT * FROM #DPI

--UPDATE DPI
UPDATE CAT_DATOS_BASICOS
SET DPI = D.NUMERO
FROM CAT_DATOS_BASICOS CD
JOIN #DPI D ON CD.COD_CLIENTE = D.COD_PERSONA
WHERE CD.DPI IS NULL

--SELECCION DE EMAIL
SELECT *
INTO #EMAIL
FROM (
	SELECT *, ROW_NUMBER() OVER (PARTITION BY COD_PERSONA ORDER BY FEC_ACTUALIZACION DESC, COD_EMAIL DESC) RN
	FROM EMAIL
	WHERE ESTADO = 1 
) A 
WHERE RN = 1

SELECT D.*, TD.COD_DIRECCION
FROM DIRECCION D
JOIN #DIRECCION TD ON D.COD_PERSONA = TD.COD_PERSONA 
					  AND D.FEC_ACTUALIZACION = TD.FEC_ACTUALIZACION 
					  WHERE D.COD_PERSONA = 3191




IF OBJECT_ID('TEMPDB..#DIRECCION') IS NOT NULL
	DROP TABLE #DIRECCION
SELECT *
INTO #DIRECCION
FROM (
	SELECT *, ROW_NUMBER() OVER (PARTITION BY COD_PERSONA ORDER BY FEC_ACTUALIZACION DESC, COD_DIRECCION DESC) RN
	FROM DIRECCION
	WHERE ESTADO = 1 
) A 
WHERE RN = 1

UPDATE #DIRECCION
SET ESTADO = 'INACTIVO'
WHERE ESTADO = '0'

ALTER TABLE #DIRECCION ALTER COLUMN ESTADO VARCHAR(50);

SELECT * FROM CAT_DATOS_BASICOS
SELECT * FROM DIRECCION
SELECT * FROM IDENTIFICACION

UPDATE CAT_DATOS_BASICOS 
SET CAT_DATOS_BASICOS.NIT = I.NUMERO
FROM CAT_DATOS_BASICOS C 
JOIN IDENTIFICACION I ON C.COD_CLIENTE = I.COD_ID
WHERE C.NIT IS NULL
AND I.TIPO = '2'

SELECT * FROM EMAIL
SELECT * FROM #EMAIL

SELECT *
INTO #EMAIL
FROM (
	SELECT *, ROW_NUMBER() OVER (PARTITION BY COD_PERSONA ORDER BY FEC_ACTUALIZACION DESC, COD_EMAIL DESC) RN
	FROM EMAIL
	WHERE ESTADO = 1 
) A 
WHERE RN = 1


--UPDATE EMAIL
UPDATE CAT_DATOS_BASICOS
SET EMAIL = E.EMAIL
FROM CAT_DATOS_BASICOS CD
JOIN #EMAIL E ON CD.COD_CLIENTE = E.COD_PERSONA
WHERE CD.EMAIL IS NULL

--SELECCION DE CREDITO
SELECT *
INTO #CREDA
FROM (
	SELECT *, ROW_NUMBER() OVER (PARTITION BY COD_PERSONA ORDER BY FEC_ACTUALIZACION DESC) RN
	FROM NOMINA
	WHERE ESTADO = 1 
) A 
WHERE RN = 1

--UPDATE DE CREDITO
UPDATE CAT_DATOS_BASICOS
SET CREDITO_AUTORIZADO = C.CREDITO_AUTORIZADO
FROM CAT_DATOS_BASICOS CD
JOIN #CREDA C ON CD.COD_CLIENTE = C.COD_PERSONA
WHERE CD.CREDITO_AUTORIZADO IS NULL

--SELECCION DE SALARIO
SELECT * 
INTO #SALARIO
FROM ( SELECT N.COD_PERSONA , N.FEC_ACTUALIZACION , N.SALARIO,
       CASE WHEN TIPO_DESCUENTO = 1 THEN N.SALARIO - (N.SALARIO * CT.VALOR) 
		    WHEN TIPO_DESCUENTO = 2 THEN SALARIO +  CT.VALOR               
			WHEN TIPO_DESCUENTO = 3 THEN SALARIO -  (N.SALARIO * CT.VALOR)                        
			WHEN TIPO_DESCUENTO = 4 THEN SALARIO -  (N.SALARIO * CT.VALOR)                          
			WHEN TIPO_DESCUENTO = 5 THEN SALARIO -  (N.SALARIO * CT.VALOR) 
			ELSE SALARIO
	   END SALARIO_LIQUIDO, 
	   TIPO_DESCUENTO , N.ESTADO, ROW_NUMBER () OVER (PARTITION BY N.COD_PERSONA ORDER BY N.FEC_ACTUALIZACION DESC, COD_PERSONA DESC) AS RN,
	   ISNULL(N.CREDITO_AUTORIZADO,0) AS CREDITO_AUTORIZADO
	   FROM NOMINA N
	   JOIN CAT_TIPO_NOMINA  CT ON N.TIPO_DESCUENTO = CT.COD_TIPO
  	   WHERE N.ESTADO = 1
) SA
WHERE RN = 1

--UPDATE CREDITO
UPDATE CAT_DATOS_BASICOS
SET SALARIO = S.SALARIO, 
SALARIO_LIQUIDO = S.SALARIO_LIQUIDO
FROM CAT_DATOS_BASICOS CD
JOIN #SALARIO S ON CD.COD_CLIENTE = S.COD_PERSONA


SELECT * FROM CAT_TIPO_NOMINA
SELECT * FROM IDENTIFICACION
SELECT * FROM CAT_TIPO_IDENTIFICACION
SELECT * FROM EMAIL
SELECT * FROM PERSONA
SELECT * FROM TELEFONO
SELECT * FROM DIRECCION
SELECT * FROM NOMINA



/*
COD_CLIENTE: Este dato debe de ser único para la tabla
2. PRIMER_NOMBRE: Nombre del cliente
3. PRIMER_APELLIDO: Apellido del cliente
4. FECHA_NACIMIENTO: Fecha de nacimiento del cliente
5. GENERO: Dato no abreviado Masculino o Femenino
6. DIRECCION: Ultimo dato actualizado activo
7. NIT: Ultimo dato actualizado activo
8. DPI: Ultimo dato actualizado activo
9. EMAIL: Ultimo dato actualizado activo
10. TELEFONO: Ultimo dato actualizado activo
11. SALARIO: Ultimo dato actualizado activo
12. SALARIO_LIQUIDO: Calcular con todos los descuentos
13. CREDITO_AUTORIZADO: Crédito Autorizado
14. ESTADO: Dato no abreviado Activo o Inactivo
*/




CASE 
	WHEN GENERO = 'M' THEN 'MASCULINO'
	WHEN GENERO = 'F' THEN 'FEMENINO'
	ELSE 'NO DEFINIDO'
END
FROM CAT_DATOS_BASICOS

IF OBJECT_ID('TEMPDB..#DETALLE') IS NOT NULL
	DROP TABLE #DETALLE
SELECT * 
INTO #DETALLE
FROM AEROPUERTO..DETALLE_FACTURA

SELECT * FROM #DETALLE

IF OBJECT_ID('TEMPDB..#SIN_IVA') IS NOT NULL
	DROP TABLE #SIN_IVA

SELECT COD_FACTURA, COD_BOLETO, PRECIO, PRECIO/1.12 SIN_IVA
INTO #SIN_IVA
FROM #DETALLE

UPDATE D
SET D.PRECIO_SIN_IVA = S.SIN_IVA
FROM AEROPUERTO..DETALLE_FACTURA D
JOIN #SIN_IVA S ON D.COD_BOLETO = S.COD_BOLETO AND D.COD_FACTURA = S.COD_FACTURA

DELETE D
FROM AEROPUERTO..DETALLE_FACTURA D
JOIN #SIN_IVA S ON D.COD_BOLETO = S.COD_BOLETO

SELECT *, ROW_NUMBER() OVER(ORDER BY PRECIO DESC)
FROM DETALLE_FACTURA
ORDER BY PRECIO

IF OBJECT_ID('TEMPDB..#DATA') IS NOT NULL
DROP TABLE #DATA

SELECT *, ROW_NUMBER() OVER(ORDER BY PRECIO DESC) ORDEN
INTO #DATA
FROM DETALLE_FACTURA

SELECT * FROM #DATA WHERE ORDEN <= 5

SELECT * FROM DIRECCION WHERE COD_PERSONA = 3191

SELECT * FROM AEROPUERTO..BOLETO

SELECT * 
INTO #BOLETO
FROM AEROPUERTO..BOLETO


IF OBJECT_ID('TEMPDB..#PERSONA') IS NOT NULL
BEGIN
	DROP TABLE #PERSONA
END
CREATE TABLE #PERSONA(
COD_PERSONA INT NOT NULL,
NOMBRE VARCHAR(50),
FECHA_REGISTRO DATE DEFAULT(GETDATE())
)

SELECT * FROM #PERSONA
--ESTE COMANDO DEL IF ES UNA SECUENCIA 


INSERT INTO #PERSONA(COD_PERSONA, NOMBRE) VALUES ('20', 'ERICK')

INSERT INTO #PERSONA(COD_PERSONA, NOMBRE)
SELECT COD_CLIENTE, NOMBRE 
FROM AEROPUERTO..CLIENTE

SELECT P.*, C.DIRECCION, C.NIT, C.TELEFONO
FROM #PERSONA P
JOIN AEROPUERTO..CLIENTE C ON P.COD_PERSONA = C.COD_CLIENTE


SELECT COD_CLIENTE, NOMBRE
INTO CLASE_20240307..PERSONA_2
FROM AEROPUERTO..CLIENTE

IF OBJECT_ID('TEMPDB..#PERSONA_2') IS NOT NULL
BEGIN 
	DROP TABLE #PERSONA_2
END 

SELECT COD_CLIENTE, NOMBRE
INTO #PERSONA_2
FROM AEROPUERTO..CLIENTE

SELECT P.*, C.DIRECCION, C.NIT, C.TELEFONO
FROM #PERSONA_2 P
JOIN AEROPUERTO..CLIENTE C ON P.COD_CLIENTE = C.COD_CLIENTE
